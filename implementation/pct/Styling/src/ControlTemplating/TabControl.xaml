<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <!--  Required resource dictionaries  -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Colors.xaml" />
    <ResourceDictionary Source="Bitmaps.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!--  Listbox in menu window  -->
  <Style x:Key="DefaultTabControlStyle" TargetType="{x:Type TabControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid KeyboardNavigation.TabNavigation="Local">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- TabPanel is a layout container which allows the TabItems to wrap and re-order when selected
            The implementation knows to use this control because it is marked IsItemsHost = True -->
            <TabPanel Grid.Row="0" Margin="0,0,4,-1" x:Name="HeaderPanel"
                      Background="Transparent"
                      IsItemsHost="True"
                      Panel.ZIndex="1"
                      KeyboardNavigation.TabIndex="1" />

            <Border Grid.Row="1" x:Name="Border"
                    Background="{DynamicResource WindowBackgroundBrush}"
                    BorderBrush="{DynamicResource OrangeBrush}"
                    BorderThickness="2" CornerRadius="2"
                    KeyboardNavigation.DirectionalNavigation="Contained"
                    KeyboardNavigation.TabNavigation="Local"
                    KeyboardNavigation.TabIndex="2">

              <!-- The implementation switches the content. This control must be named PART_SelectedContentHost -->
              <ContentPresenter Margin="4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />

            </Border>
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
              <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
            </Trigger>
          </ControlTemplate.Triggers>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  TabControl item Templates  -->
  <Style x:Key="DefaultTabItemStyle" TargetType="{x:Type TabItem}">
    <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid>
            <Border x:Name="Border"
                    BorderBrush="{DynamicResource GreyBrush}"
                    BorderThickness="2,2,2,0"
                    CornerRadius="2,12,0,0">
              <Border x:Name="BottumBorder">
                <ContentPresenter x:Name="ContentSite"
                                  HorizontalAlignment="Center"
                                  Margin="12,2,12,2"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True"
                                  ContentSource="Header" />
              </Border>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="BorderBrush" Value="{DynamicResource OrangeBrush}" TargetName="Border" />
              <Setter Property="BorderThickness" Value="2,2,2,0" TargetName="Border" />
              <Setter Property="BorderBrush" Value="{DynamicResource WindowBackgroundBrush}" TargetName="BottumBorder" />
              <Setter Property="BorderThickness" Value="0,0,0,2" TargetName="BottumBorder" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
              <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
              <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Cursor" Value="Hand" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


    <Style BasedOn="{StaticResource DefaultTabControlStyle}" TargetType="TabControl" />
    <Style BasedOn="{StaticResource DefaultTabItemStyle}" TargetType="TabItem" />

</ResourceDictionary>